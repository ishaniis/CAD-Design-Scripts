

P1 = (0,0)
P2 = (0,20)
P3 = (20,0)
P4 = (20,20)
P5 = (40,0)
P = np.concatenate(P1,P2,P3,P4,P5)

#X axis
a1 = 0
#Y axis
a2 = 1
#Z axis 
a3 = 2

K_local = ([(m**2) , (m*n),(-m**2),(-m*n)],[(m*n),(m**2),(-m*n),(-n**2)],[(-m**2),(-m*n),(n**2),(m*n)],[(-m*n),(n**2),(m*n),(n**2)])

#Element 1 
i = 1
j = 3
p = 1
l1 = np.sqrt(np.square(P[j-1][a1] - P[i-1][a1]) + np.square(P[j-1][a2] - P[i-1][a2])
m1 = (P[j-1][a1] - P[i-1][a1])/l1
n1 = (P[j-1][a2] - P[i-1][a2])/l1

#Element 2
i = 1
j = 4
l2 = np.sqrt(np.square(P[j-1][a1] - P[i-1][a1]) + np.square(P[j-1][a2] - P[i-1][a2])
m1 = (P[j-1][a1] - P[i-1][a2])/l1
n1 = (P[j-1][a2] - P[i-1][a2])/l2


